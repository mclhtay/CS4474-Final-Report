[meta title:"Library Space Booking System Web" description:"This is the web interactive article of the final report of CS4474" /]

[Header
  fullWidth:true
  title:"Library Space Booking System Web"
  subtitle:"Final Report"
  author:"Connor Haines, Serena Hou, Sheng Gen Jin, Moneet Tiwana, Wenxuan Zhang"
  date:"Mar 11, 2023"
  background:"#222222"
  color:"#ffffff"
   /]

## Overview

Library Space Booking System Web is a rebuild of the [link text: "terminal application" url: 
"https://github.com/connor2033/LibrarySpaceBookingSystem" target:"_blank"/] with the same name but in a web context.
Components and features are redesigned in a modern skeuomorphic look. 

[Preview title: 'Library Space Booking System Web' description: 'Try the system here.' url: 'https://mclhtay.github.io/LibrarySpaceBookingSystemWeb' media: 'https://www.communications.uwo.ca/img/logo_teasers/Stacked.gif' /]

```
You can try to login with the following credentials

* As a student
** email: student@uwo.ca
** password: student

* As an administrator
** email: librarian@uwo.ca
** password: librarian
```

## Executive Summary
The Library Space Booking System Web (LSBSW) implements several design principles, interfaces, and leverages macro- and micro-level interactions in order to provide a user-centered re-design of the previously implemented command-line program. Although the command-line program is able to provide similar features as the new re-design, the new implementation that is demonstrated in this final project is developed using different levels of design thinking to meet usability and user experience goals.

The promised features of the system ensure that the system allows students to book rooms that are only available to book at that time. The system also ensures that the timings are updated accordingly as students book rooms in the libraries to mark these rooms as unavailable for the booked times. Furthermore, the LSBSW will prevent users from booking rooms if the information is incorrect, or if they attempt to book the rooms during unavailable times. On the other hand, the librarian has increased features, such as adding and removing rooms as well as overriding certain features due to the enhanced permissions of a librarian user. 

In order to meet usability and user experience goals, several design principles are implemented through various design decisions. The usability goals are met by ensuring that users are able to intuitively understand how to use the platform through clear instructions. Furthermore, our design resembles the current designs of existing Western-owned software in order to leverage the familiarity that students may already have with current Western software, such as Draft My Schedule and Summer Timetable. Similarly, user experience goals are met that can allow students to easily manage library resources online through simplistic and minimal visual elements. 

The design principles that are defined by Donald Norman, as well as design principles studied in the Computer Science 4474A/B course, are implemented throughout the project in order to enhance the user experience of the students that will be using the new software. Although these design principles are explained in further detail in the later sections of this report, some of the important design principles to highlight include visibility, feedback, constraint, consistency, affordance and mapping. Overall, these principles are met by providing intuitive features that can help guide the users toward their goals in using the system. Additionally, the system provides only useful information to the users and helpful messages along the way. For further details on the implemented design principles, please see Section 3: Justification of 20 Implemented Design Principles of the final report. 

 The LSBSW makes use of the different types of interfaces in order to provide a pleasurable experience to the users. The interface of the original design simply used a command-based interface for the entire program. However, the new re-design of the program uses some different interfaces in order to create an improved user-centered design. One of these interfaces is the WIMP (Window, Icon, Menu, Pointer) interface. This interface is familiar to students and librarians as they are assured to have worked with this interface style with similar Western-owned software. Within the WIMP interface, we integrated the use of the Web interface, as this system is designed to be used within a web browser to support the forms and the updating of available resources among multiple users. 

The interactivity of the LSBSW can be divided into two different levels, micro-level and macro-level interactions. For the micro-level interactions, the most prominent interactions to highlight are presence, granularity, and timing within the action anatomy of the interactions. The presence interaction uses explicit and implicit presence, by changing the shape of the cursor to indicate that a button is clickable for explicit interaction, and assuming that the user understands how to use online forms for implicit presence. Furthermore, the system uses composite granularity for users to be able to complete various tasks, such as booking a room by selecting the times to reserve, filling out personal information, and submitting the request. Lastly, the timing of the system allows the user to self-pace themselves in order to be able to make careful decisions when booking rooms and ensuring that the user does not feel rushed. 

As for macro-level interactions, the diversity is impacted based on the type of user that logs into the system. For example, the diversity is lessened when a student logs into the system over a librarian, as a librarian can implement more features such as adding and removing rooms. The complimentarity builds on the granularity of the tasks, as the individual micro-level interactions allow users to perform bigger cognitive tasks. Additionally, the flexibility of the system is enhanced through the different tabs to adjust the interface to allow the user to only see information relevant to their goals. Finally, the genre of the system is maintained through annotation-based interactions for students to book existing rooms and combination-based interactions for librarians to add new rooms. 

Overall, the LSBSW provides a user-friendly experience targeted specifically for Western University students and librarians. By ensuring a strong presence of usability goals, user experience goals, and design principles within the system re-design, Western students can interact with a system that is much easier to use than a command line program and easily manage library resources.

## Navigation Map
[var name: "navigationMode" value: "Graph"/]
[link text:"See the detailed map," url: "static/images/storyboard.jpg" target: "_blank"/]
[Display value: " or explore the interactive navigator below."/]

[div className:"navigation-map"]
  [Display value: 'Choose a navigation mode:'/]
  [span]
    [Radio value: navigationMode options: `["Graph", "Controlled"]`/]
  [/span]
[/div]
[FullWidth]
  [Conditional if: `navigationMode == "Graph"`]
      [NavigationGraph /]
  [/Conditional]
  [Conditional if: `navigationMode == "Controlled"`]
    [NavigationControlled/]
  [/Conditional]
[/FullWidth]

## Design Principles


## Heuristic Evaluation
#### Visibility of System Status
* The system gives a status message to let the user know if the study room has been booked successfully
#### Match Between the System and the Real World
* Language is plain and straightforward
* System uses skeuomorphic design in the form of a garbage icon to represent deleting a booking, a plus button to represent adding a booking, and a door with an arrow icon to represent logging out. The representations make sense and align well with their real-world counterparts.
#### User Control & Freedom
* If the user clicks on the add button by accident, there is a cancel button clearly marked to allow them to escape.
* If the user clicks delete by accident, the system confirms with the user whether they really want to proceed.
#### Consistency and Standards
* The system maintains internal consistency by using the colour blue to indicate actions like adding a booking, confirming, logging in, etc. while using grey or white for actions that indicate canceling or going back, like deleting a booking, canceling adding a booking, or logging out.
* However, the confirm button for when the user tries to delete a booking is not blue.
* The system maintains external consistency by using the garbage icon for delete, plus sign for add, door icon with arrow for logout, which are commonly used in other sites.
#### Error Prevention
* The system does not ask the user whether they’re sure they want to logout, so errors may occur.
#### Recognition vs. Recall in User Interfaces
* When adding a booking, the interface shows available times and options such as quiet, private, and accessible spaces to prompt the user rather than making the user remember all of these times and features.
#### Flexibility and Efficiency of Use
* Enter button could be used to sign in as well as the sign in button
#### Aesthetic and Minimalist Design
* Most of the information shown is relevant to the user, there is very little noise (high signal to noise ratio)
#### Help Users Recognize, Diagnose and Recover from Errors
* Shows an error message when login in invalid, but could specify if the password is wrong, or if there is no account associated with the email
* When the user adds a booked, there’s a warning that says “Some inputs are invalid, please adjust them to see available slots”, but this is not specific enough to help the user understand what errors could potentially occur
#### Help & Documentation
* No help page or chatbot


## Recommendations

The follow are some of the possible improvements that can be made to the system:
1. Ask the user if they’re sure they want to log out in case they clicked it by accident
3. Make a help page or chatbot
4. Add a maximum booking duration threshold
